<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <!-- Select a world to spawn the robot -->
    
    <arg name="world_suffix"  default="wrs2020"/>
    <!-- Initial position for the robot -->
    <arg name="robot_pos" default="-x -2.465190 -y 2.348440 -z 0 -Y -1.57"/>

    <!-- Do not change the parameters under this line-->

    <!-- Arguments required for tiago simulation -->
    <arg name="robot"  default="steel"/>
    <arg name="arm"  default="$(eval {'iron': False}.get(arg('robot'), True))"/>
    <arg name="end_effector"  default="$(eval {'iron': 'false', 'steel': 'pal-gripper', 'titanium': 'pal-hey5'}.get(arg('robot'), 'pal-gripper'))"/>
    <arg name="ft_sensor"  default="$(eval {'titanium': 'schunk-ft'}.get(arg('robot'), 'false'))"/>
    <arg name="laser_model"  default="sick-571"/>
    <arg name="camera_model"  default="orbbec-astra"/>
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="public_sim" default="true"/>
    <arg name="tuck_arm" default="true"/>
    <arg name="recording" default="false"/>
    <arg name="extra_gazebo_args" default=""/>
    <arg name="use_moveit_camera" default="false"/>
    <arg name="use_dynamic_footprint" default="false"/>
    <arg name="mapping" default="gmapping"/>
    <arg name="map" default="$find(tmc_wrs_gazebo_worlds)/maps/wrs2020"/>
    <!-- Set Gazebo environment variables to find the models contained in this package and the tiago library -->
    <env name="GAZEBO_MODEL_PATH"  
         value="$(optenv GAZEBO_MODEL_PATH):$(find ics_gazebo)/models:$(find tiago_gazebo)/models"/>
    <env name="LC_NUMERIC" value="C" />

    <!--1-->
    <!-- Start Gazebo world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find tmc_wrs_gazebo_worlds)/worlds/$(arg world_suffix).world"/>
    </include>
    
    <!--2-->
    <!-- spawn robot in simulation -->
    <include file="$(find tiago_gazebo)/launch/tiago_spawn.launch">
        <arg name="arm" value="$(arg arm)"/>
        <arg name="end_effector" value="$(arg end_effector)"/>
        <arg name="ft_sensor" value="$(arg ft_sensor)"/>
        <arg name="laser_model" value="$(arg laser_model)"/>
        <arg name="camera_model" value="$(arg camera_model)"/>
        <arg name="gzpose" value="$(arg robot_pos)"/>
    </include>

    <!--3-->
    <!-- bring up robot -->
    <include file="$(find tiago_gazebo)/launch/simulation_tiago_bringup.launch">
        <arg name="arm" value="$(arg arm)"/>
        <arg name="end_effector" value="$(arg end_effector)"/>
        <arg name="ft_sensor" value="$(arg ft_sensor)"/>
        <arg name="laser_model" value="$(arg laser_model)"/>
        <arg name="camera_model" value="$(arg camera_model)"/>
        <arg name="public_sim"  value="$(arg public_sim)"/>
        <arg name="use_moveit_camera" value="$(arg use_moveit_camera)"/>
        <arg name="use_dynamic_footprint" value="$(arg use_dynamic_footprint)"/>
    </include>

    <!--额外添加：建图功能-->
    <!-- mapping launch-->
    <include file="$(find tiago_2dnav)/launch/mapping.launch">
        <arg name="mapping" value="$(arg mapping)"/>
    </include> 

    <!--4-->
    <!-- point cloud throttle and filter -->
    <group unless="$(arg public_sim)">
        <include file="$(find pal_pcl_points_throttle_and_filter)/launch/throttle_filtering_points.launch">
            <arg name="cloud"  value="/xtion/depth_registered/points"/>
        </include>
    </group>

    <group if="$(arg tuck_arm)">
        <node name="tuck_arm" pkg="tiago_gazebo" type="tuck_arm.py" output="screen"/>
    </group>
    
    
    <node name="image_proc" pkg="image_proc" type="image_proc" ns="xtion/rgb"/>

    <!--5-->
    <!-- Launch rviz -->
 	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find ics_gazebo)/config/tiago.rviz" required="true" />
        
</launch>
